#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#

application.title:Apache Fineract

fineract.node-id:1

fineract.security.basicauth.enabled:true
fineract.security.oauth.enabled:false
fineract.security.2fa.enabled:false
spring.datasource.url:127.0.0.1:3306/fineract
fineract.tenant.host:127.0.0.1
fineract.tenant.port:3306
fineract.tenant.username:root
fineract.tenant.password:skdcnwauicn2ucnaecasdsajdnizucawencascdca
fineract.tenant.parameters:
fineract.tenant.timezone:Europe/Paris
fineract.tenant.identifier:default
fineract.tenant.name:fineract_default
fineract.tenant.description:Default Demo Tenant
fineract.tenant.master-password:skdcnwauicn2ucnaecasdsajdnizucawencascdca
fineract.tenant.encrytion:AES/CBC/PKCS5Padding

fineract.tenant.read-only-host:
fineract.tenant.read-only-port:
fineract.tenant.read-only-username:
fineract.tenant.read-only-password:
fineract.tenant.read-only-parameters:
fineract.tenant.read-only-name:

fineract.tenant.config.min-pool-size:-1
fineract.tenant.config.max-pool-size:-1

fineract.mode.read-enabled:true
fineract.mode.write-enabled:true
fineract.mode.batch-worker-enabled:true
fineract.mode.batch-manager-enabled:true

fineract.query.in-clause-parameter-size-limit:1000

fineract.api.body-item-size-limit.inline-loan-cob:1000

fineract.correlation.enabled:false
fineract.correlation.header-name:X-Correlation-ID

fineract.job.stuck-retry-threshold:5
fineract.job.loan-cob-enabled:true

fineract.partitioned-job.partitioned-job-properties[0].job-name:LOAN_COB
fineract.partitioned-job.partitioned-job-properties[0].chunk-size:100
fineract.partitioned-job.partitioned-job-properties[0].partition-size:100
fineract.partitioned-job.partitioned-job-properties[0].thread-pool-core-pool-size:5
fineract.partitioned-job.partitioned-job-properties[0].thread-pool-max-pool-size:5
fineract.partitioned-job.partitioned-job-properties[0].thread-pool-queue-capacity:20
fineract.partitioned-job.partitioned-job-properties[0].retry-limit:5
fineract.partitioned-job.partitioned-job-properties[0].poll-interval:10000

fineract.remote-job-message-handler.spring-events.enabled:true
fineract.remote-job-message-handler.jms.enabled:false
fineract.remote-job-message-handler.jms.request-queue-name:JMS-request-queue
fineract.remote-job-message-handler.jms.broker-url:tcp://127.0.0.1:61616
fineract.remote-job-message-handler.jms.broker-username:
fineract.remote-job-message-handler.jms.broker-password:

fineract.remote-job-message-handler.kafka.enabled:false
fineract.remote-job-message-handler.kafka.topic.auto-create:true
fineract.remote-job-message-handler.kafka.topic.name:job-topic
fineract.remote-job-message-handler.kafka.topic.replicas:1
fineract.remote-job-message-handler.kafka.topic.partitions:10
fineract.remote-job-message-handler.kafka.bootstrap-servers:127.0.0.1:9092
fineract.remote-job-message-handler.kafka.consumer.group-id:fineract-consumer-group-id
#defines the key and value separator, e.g.: key:value
fineract.remote-job-message-handler.kafka.consumer.extra-properties-key-value-separator:
#defines the item separator, e.g.: key1:value1|key2:value2
fineract.remote-job-message-handler.kafka.consumer.extra-properties-separator:|
#holds list of key value pairs using the above defined separators:  key1:value1|key2:value2|...|keyn:valuen
fineract.remote-job-message-handler.kafka.consumer.extra-properties:
fineract.remote-job-message-handler.kafka.producer.extra-properties-separator:|
fineract.remote-job-message-handler.kafka.producer.extra-properties-key-value-separator::
fineract.remote-job-message-handler.kafka.producer.extra-properties:
fineract.remote-job-message-handler.kafka.admin.extra-properties-separator:|
fineract.remote-job-message-handler.kafka.admin.extra-properties-key-value-separator::
fineract.remote-job-message-handler.kafka.admin.extra-properties:

fineract.events.external.enabled:false
fineract.events.external.partition-size:5000
fineract.events.external.producer.jms.enabled:false
fineract.events.external.producer.jms.async-send-enabled:false
fineract.events.external.producer.jms.event-queue-name:
fineract.events.external.producer.jms.event-topic-name:
fineract.events.external.producer.jms.broker-url:tcp://127.0.0.1:61616
fineract.events.external.producer.jms.broker-username:
fineract.events.external.producer.jms.broker-password:
fineract.events.external.producer.jms.producer-count:1
fineract.events.external.producer.jms.thread-pool-task-executor-core-pool-size:10
fineract.events.external.producer.jms.thread-pool-task-executor-max-pool-size:100

fineract.events.external.producer.kafka.enabled:false
fineract.events.external.producer.kafka.timeout-in-seconds:10
fineract.events.external.producer.kafka.topic.auto-create:true
fineract.events.external.producer.kafka.topic.name:external-events
fineract.events.external.producer.kafka.topic.replicas:1
fineract.events.external.producer.kafka.topic.partitions:10
fineract.events.external.producer.kafka.bootstrap-servers:127.0.0.1:9092
fineract.events.external.producer.kafka.producer.extra-properties-separator:|
fineract.events.external.producer.kafka.producer.extra-properties-key-value-separator::
fineract.events.external.producer.kafka.producer.extra-properties:linger.ms:10|batch.size:16384
fineract.events.external.producer.kafka.admin.extra-properties-separator:|
fineract.events.external.producer.kafka.admin.extra-properties-key-value-separator::
fineract.events.external.producer.kafka.admin.extra-properties:


fineract.task-executor.default-task-executor-core-pool-size:10
fineract.task-executor.default-task-executor-max-pool-size:100

fineract.idempotency-key-header-name:Idempotency-Key

fineract.loan.transactionprocessor.creocore.enabled:true
fineract.loan.transactionprocessor.early-repayment.enabled:true
fineract.loan.transactionprocessor.mifos-standard.enabled:true
fineract.loan.transactionprocessor.heavensfamily.enabled:true
fineract.loan.transactionprocessor.interest-principal-penalties-fees.enabled:true
fineract.loan.transactionprocessor.principal-interest-penalties-fees.enabled:true
fineract.loan.transactionprocessor.rbi-india.enabled:true
fineract.loan.transactionprocessor.due-penalty-fee-interest-principal-in-advance-principal-penalty-fee-interest.enabled:true
fineract.loan.transactionprocessor.due-penalty-interest-principal-fee-in-advance-penalty-interest-principal-fee.enabled:true
fineract.loan.transactionprocessor.advanced-payment-strategy.enabled:true
fineract.loan.transactionprocessor.error-not-found-fail:true

# Comma separated list of loan statuses which will be recorded on change. There are two extra values: NONE and ALL.
# NONE disables the feature and no entries will be created, ALL enables the feature for all loan statuses.
fineract.loan.status-change-history-statuses:NONE

fineract.content.regex-whitelist-enabled:true
fineract.content.regex-whitelist:.*\\.pdf$,.*\\.doc,.*\\.docx,.*\\.xls,.*\\.xlsx,.*\\.jpg,.*\\.jpeg,.*\\.png
fineract.content.mime-whitelist-enabled:true
fineract.content.mime-whitelist:application/pdf,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,image/jpeg,image/png
fineract.content.filesystem.enabled:true
fineract.content.filesystem.rootFolder:${user.home}/.fineract
fineract.content.s3.enabled:false
fineract.content.s3.bucketName::
fineract.content.s3.accessKey::
fineract.content.s3.secretKey::

fineract.template.regex-whitelist-enabled:true
fineract.template.regex-whitelist::

fineract.report.export.s3.bucket::
fineract.report.export.s3.enabled:false

fineract.jpa.statementLoggingEnabled:false
fineract.database.defaultMasterPassword:skdcnwauicn2ucnaecasdsajdnizucawencascdca

fineract.notification.user-notification-system.enabled:true
fineract.logging.json.enabled:false

fineract.sampling.enabled:false
fineract.sampling.samplingRate:1000
fineract.sampling.sampledClasses::
fineract.sampling.resetPeriodSec:60

fineract.module.investor.enabled:true

fineract.insecure-http-client:true

# sql validation

# inject-blind
fineract.sql-validation.patterns[0].name:inject-blind
fineract.sql-validation.patterns[0].pattern:(?i).*[\\"'`]?\\s*[and|or]+\\s*[\\"'`]?([\\d\\w])+[\\"'`]?\\s*=\\s*[\\"'`]?(\\1)[\\"'`]?\\s*.*

# detect-entry-point
fineract.sql-validation.patterns[1].name:detect-entry-point
fineract.sql-validation.patterns[1].pattern:(?i)^[\\"'`]?[\\)\\s]+

# inject-timing
fineract.sql-validation.patterns[2].name:inject-timing
fineract.sql-validation.patterns[2].pattern:(?i).*[\\"'`]?\\s*[and|\\+|&|\\|]+.*\\s*[sleep|pg_sleep|benchmark]+\\s*(\\(\\s*\\d+\\s*[,]?\\s*.*\\s*\\))+.*

# detect-backend
fineract.sql-validation.patterns[3].name:detect-backend
fineract.sql-validation.patterns[3].pattern:(?i).*\\[\\s*\\"(\\w+\\(.*\\))=(\\1)\\"\\s*,\\s*\\"\\w+\\"\\s*\\].*

# detect-column
fineract.sql-validation.patterns[4].name:detect-column
fineract.sql-validation.patterns[4].pattern:(?i).*[\\"'`]?\\s*(order\\s*by|group\\s*by|union\\s*select)+\\s+([\\d+|null]?\\s*,*\\s*)+\\s*.*

# detect-out-of-bands
fineract.sql-validation.patterns[5].name:detect-out-of-bands
fineract.sql-validation.patterns[5].pattern:(?i).*(select)+\\s+(load_file)+.*

# inject-stacked-query
fineract.sql-validation.patterns[6].name:inject-stacked-query
fineract.sql-validation.patterns[6].pattern:(?i).*[;]+\\s*(create|drop|alter|truncate|comment|select|insert|update|delete|merge|upsert|call|exec)+.*(from|into|set|table|column|database)*.*

# inject-comment
fineract.sql-validation.patterns[7].name:inject-comment
fineract.sql-validation.patterns[7].pattern:(?i).*\\s+(-|/\\*|#|\\(\\{)++.*

# main
fineract.sql-validation.profiles[0].name:main
fineract.sql-validation.profiles[0].description:Main Query Validation Profile
fineract.sql-validation.profiles[0].patternRefs[0].name:inject-blind
fineract.sql-validation.profiles[0].patternRefs[0].order:0
fineract.sql-validation.profiles[0].patternRefs[1].name:detect-entry-point
fineract.sql-validation.profiles[0].patternRefs[1].order:1
fineract.sql-validation.profiles[0].patternRefs[2].name:inject-timing
fineract.sql-validation.profiles[0].patternRefs[2].order:2
fineract.sql-validation.profiles[0].patternRefs[3].name:detect-backend
fineract.sql-validation.profiles[0].patternRefs[3].order:3
fineract.sql-validation.profiles[0].patternRefs[4].name:detect-column
fineract.sql-validation.profiles[0].patternRefs[4].order:4
fineract.sql-validation.profiles[0].patternRefs[5].name:detect-out-of-bands
fineract.sql-validation.profiles[0].patternRefs[5].order:5
fineract.sql-validation.profiles[0].patternRefs[6].name:inject-stacked-query
fineract.sql-validation.profiles[0].patternRefs[6].order:6
fineract.sql-validation.profiles[0].patternRefs[7].name:inject-comment
fineract.sql-validation.profiles[0].patternRefs[7].order:7
fineract.sql-validation.profiles[0].enabled:true

# adhoc
fineract.sql-validation.profiles[1].name:adhoc
fineract.sql-validation.profiles[1].description:Adhoc Query Validation Profile
fineract.sql-validation.profiles[1].patternRefs[0].name:inject-blind
fineract.sql-validation.profiles[1].patternRefs[0].order:0
fineract.sql-validation.profiles[1].patternRefs[1].name:detect-entry-point
fineract.sql-validation.profiles[1].patternRefs[1].order:1
fineract.sql-validation.profiles[1].patternRefs[2].name:inject-timing
fineract.sql-validation.profiles[1].patternRefs[2].order:2
fineract.sql-validation.profiles[1].patternRefs[3].name:detect-backend
fineract.sql-validation.profiles[1].patternRefs[3].order:3
fineract.sql-validation.profiles[1].patternRefs[4].name:detect-column
fineract.sql-validation.profiles[1].patternRefs[4].order:4
fineract.sql-validation.profiles[1].patternRefs[5].name:detect-out-of-bands
fineract.sql-validation.profiles[1].patternRefs[5].order:5
fineract.sql-validation.profiles[1].patternRefs[6].name:inject-stacked-query
fineract.sql-validation.profiles[1].patternRefs[6].order:6
fineract.sql-validation.profiles[1].patternRefs[7].name:inject-comment
fineract.sql-validation.profiles[1].patternRefs[7].order:7
fineract.sql-validation.profiles[1].enabled:true

# dynamic
fineract.sql-validation.profiles[2].name:column
fineract.sql-validation.profiles[2].description:Column Validation Profile
fineract.sql-validation.profiles[2].patternRefs[0].name:inject-blind
fineract.sql-validation.profiles[2].patternRefs[0].order:0
fineract.sql-validation.profiles[2].patternRefs[1].name:detect-entry-point
fineract.sql-validation.profiles[2].patternRefs[1].order:1
fineract.sql-validation.profiles[2].patternRefs[2].name:inject-timing
fineract.sql-validation.profiles[2].patternRefs[2].order:2
fineract.sql-validation.profiles[2].patternRefs[3].name:detect-backend
fineract.sql-validation.profiles[2].patternRefs[3].order:3
fineract.sql-validation.profiles[2].patternRefs[4].name:detect-out-of-bands
fineract.sql-validation.profiles[2].patternRefs[4].order:4
fineract.sql-validation.profiles[2].patternRefs[5].name:inject-stacked-query
fineract.sql-validation.profiles[2].patternRefs[5].order:5
fineract.sql-validation.profiles[2].patternRefs[6].name:inject-comment
fineract.sql-validation.profiles[2].patternRefs[6].order:6
fineract.sql-validation.profiles[2].enabled:true

# Logging pattern for the console
logging.pattern.console:${CONSOLE_LOG_PATTERN:%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(%replace([%X{correlationId}]){'\\[\\]', ''}) %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}}
logging.pattern.level:%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

management.health.jms.enabled:${FINERACT_MANAGEMENT_HEALTH_JMS_ENABLED:false}

# FINERACT 1296
management.endpoint.health.probes.enabled:true
management.health.livenessState.enabled:true
management.health.readinessState.enabled:true

management.health.ratelimiters.enabled:${FINERACT_MANAGEMENT_HEALTH_RATELIMITERS_ENABLED:false}

management.endpoints.web.cors.allowed-origins:*
management.endpoints.web.cors.allowed-methods:GET, POST, PUT, DELETE, OPTIONS
management.endpoints.web.cors.allowed-headers:*

# FINERACT-883
management.info.git.mode:FULL
management.endpoints.web.exposure.include:${FINERACT_MANAGEMENT_ENDPOINT_WEB_EXPOSURE_INCLUDE:health,info,prometheus}

management.tracing.enabled:${FINERACT_MANAGEMENT_TRACIING_ENABLED:false}

management.metrics.tags.application:${FINERACT_MANAGEMENT_METRICS_TAGS_APPLICATION:fineract}
management.metrics.distribution.percentiles-histogram.http.server.requests:${FINERACT_MANAGEMENT_METRICS_DISTRIBUTION_HTTP_SERVER_REQUESTS:false}

management.otlp.metrics.export.enabled:${FINERACT_MANAGEMENT_OLTP_ENABLED:false}
management.otlp.metrics.export.url:${FINERACT_MANAGEMENT_OLTP_METRICS_EXPORT_URL:http://tempo:4318/v1/traces}
management.otlp.metrics.export.aggregationTemporality:${FINERACT_MANAGEMENT_OLTP_METRICS_EXPORT_AGGREGATION_TEMPORALITY:cumulative}

management.prometheus.metrics.export.enabled:${FINERACT_MANAGEMENT_PROMETHEUS_ENABLED:false}
# TODO: show pushgateway example
# management.prometheus.metrics.export.pushgateway.enabled:false

spring.cloud.aws.cloudwatch.enabled:${FINERACT_MANAGEMENT_CLOUDWATCH_ENABLED:false}
#spring.cloud.aws.cloudwatch.region:${FINERACT_MANAGEMENT_CLOUDWATCH_REGION:us-east-1}

management.metrics.export.cloudwatch.enabled:${FINERACT_MANAGEMENT_CLOUDWATCH_ENABLED:false}
management.metrics.export.cloudwatch.namespace:${FINERACT_MANAGEMENT_CLOUDWATCH_NAMESPACE:fineract}
management.metrics.export.cloudwatch.step:${FINERACT_MANAGEMENT_CLOUDWATCH_STEP:1m}

spring.autoconfigure.exclude:io.awspring.cloud.autoconfigure.core.AwsAutoConfiguration,\
  io.awspring.cloud.autoconfigure.core.CredentialsProviderAutoConfiguration

spring.cloud.aws.endpoint:${FINERACT_AWS_ENDPOINT:}
spring.cloud.aws.region.static:${FINERACT_AWS_REGION_STATIC:us-east-1}
spring.cloud.aws.credentials.access-key:${FINERACT_AWS_CREDENTIALS_ACCESS_KEY:}
spring.cloud.aws.credentials.secret-key:${FINERACT_AWS_CREDENTIALS_SECRET_KEY:}
spring.cloud.aws.credentials.instance-profile:${FINERACT_AWS_CREDENTIALS_INSTANCE_PROFILE:false}
spring.cloud.aws.credentials.profile.name:${FINERACT_AWS_CREDENTIALS_PROFILE_NAME:}
spring.cloud.aws.credentials.profile.path:${FINERACT_AWS_CREDENTIALS_PROFILE_PATH:}

# FINERACT-914
server.forward-headers-strategy:framework
server.port:${FINERACT_SERVER_PORT:8443}
server.servlet.context-path:${FINERACT_SERVER_SERVLET_CONTEXT_PATH:/fineract-provider}
server.compression.enabled:${FINERACT_SERVER_COMPRESSION_ENABLED:true}

server.ssl.enabled:${FINERACT_SERVER_SSL_ENABLED:true}
server.ssl.protocol:TLS
#server.ssl.ciphers:${FINERACT_SERVER_SSL_CIPHERS:TLS_RSA_WITH_AES_128_CBC_SHA256}
#server.ssl.enabled-protocols:${FINERACT_SERVER_SSL_PROTOCOLS:TLSv1.2}
server.ssl.key-store:${FINERACT_SERVER_SSL_KEY_STORE:classpath:keystore.jks}
server.ssl.key-store-password:${FINERACT_SERVER_SSL_KEY_STORE_PASSWORD:openmf}

# Graceful shutdown configuration
server.shutdown:graceful
spring.lifecycle.timeout-per-shutdown-phase:${FINERACT_TIMEOUT_PER_SHUTDOWN:30s}

server.tomcat.accept-count:${FINERACT_SERVER_TOMCAT_ACCEPT_COUNT:100}
server.tomcat.accesslog.enabled:${FINERACT_SERVER_TOMCAT_ACCESSLOG_ENABLED:false}
server.tomcat.max-connections:${FINERACT_SERVER_TOMCAT_MAX_CONNECTIONS:8192}
server.tomcat.max-http-form-post-size:${FINERACT_SERVER_TOMCAT_MAX_HTTP_FORM_POST_SIZE:2MB}
server.tomcat.max-keep-alive-requests:${FINERACT_SERVER_TOMCAT_MAX_KEEP_ALIVE_REQUESTS:100}
server.tomcat.threads.max:${FINERACT_SERVER_TOMCAT_THREADS_MAX:200}
server.tomcat.threads.min-spare:${FINERACT_SERVER_TOMCAT_THREADS_MIN_SPARE:10}

# OAuth authorisation server endpoint
spring.security.oauth2.resourceserver.jwt.issuer-uri:${FINERACT_SERVER_OAUTH_RESOURCE_URL:http://127.0.0.1:9000/auth/realms/fineract}

spring.datasource.hikari.driverClassName:org.mariadb.jdbc.Driver
spring.datasource.hikari.jdbcUrl:jdbc:mariadb://127.0.0.1:3306/fineract_tenants
spring.datasource.hikari.username:root
spring.datasource.hikari.password:skdcnwauicn2ucnaecasdsajdnizucawencascdca
spring.datasource.hikari.minimumIdle:3
spring.datasource.hikari.maximumPoolSize:10
spring.datasource.hikari.idleTimeout:60000
spring.datasource.hikari.connectionTimeout:20000
spring.datasource.hikari.connectionTestquery:SELECT 1
spring.datasource.hikari.autoCommit:true
spring.datasource.hikari.transactionIsolation:TRANSACTION_REPEATABLE_READ
spring.datasource.hikari.dataSourceProperties['cachePrepStmts']:true
spring.datasource.hikari.dataSourceProperties['prepStmtCacheSize']:250
spring.datasource.hikari.dataSourceProperties['prepStmtCacheSqlLimit']:2048
spring.datasource.hikari.dataSourceProperties['useServerPrepStmts']:true
spring.datasource.hikari.dataSourceProperties['useLocalSessionState']:true
spring.datasource.hikari.dataSourceProperties['rewriteBatchedStatements']:true
spring.datasource.hikari.dataSourceProperties['cacheResultSetMetadata']:true
spring.datasource.hikari.dataSourceProperties['cacheServerConfiguration']:true
spring.datasource.hikari.dataSourceProperties['elideSetAutoCommits']:true
spring.datasource.hikari.dataSourceProperties['maintainTimeStats']:false
# https://github.com/brettwooldridge/HikariCP/wiki/JDBC-Logging#mysql-connectorj
# TODO FINERACT-890: <prop key:logger>com.mysql.cj.log.Slf4JLogger</prop>
spring.datasource.hikari.dataSourceProperties['logSlowQueries']:true
spring.datasource.hikari.dataSourceProperties['dumpQueriesOnException']:true
spring.jpa.open-in-view:false

# Liquibase configuration
spring.liquibase.enabled:true
spring.liquibase.changeLog:classpath:/db/changelog/db.changelog-master.xml

spring.liquibase.parameters.fineract.tenant.identifier:${fineract.tenant.identifier}
spring.liquibase.parameters.fineract.tenant.description:${fineract.tenant.description}
spring.liquibase.parameters.fineract.tenant.timezone:${fineract.tenant.timezone}
spring.liquibase.parameters.fineract.tenant.schema-name:${fineract.tenant.name}
spring.liquibase.parameters.fineract.tenant.host:${fineract.tenant.host}
spring.liquibase.parameters.fineract.tenant.port:${fineract.tenant.port}
spring.liquibase.parameters.fineract.tenant.username:${fineract.tenant.username}
spring.liquibase.parameters.fineract.tenant.password:${fineract.tenant.password}
spring.liquibase.parameters.fineract.tenant.parameters:${fineract.tenant.parameters}
spring.liquibase.parameters.fineract.tenant.read-only-host:${fineract.tenant.read-only-host}
spring.liquibase.parameters.fineract.tenant.read-only-port:${fineract.tenant.read-only-port}
spring.liquibase.parameters.fineract.tenant.read-only-username:${fineract.tenant.read-only-username}
spring.liquibase.parameters.fineract.tenant.read-only-password:${fineract.tenant.read-only-password}
spring.liquibase.parameters.fineract.tenant.read-only-parameters:${fineract.tenant.read-only-parameters}
spring.liquibase.parameters.fineract.tenant.read-only-name:${fineract.tenant.read-only-name}

springdoc.api-docs.path:/api-docs
springdoc.api-docs.enabled:true
springdoc.swagger-ui.enabled:true
springdoc.swagger-ui.display-query-params:true
springdoc.swagger-ui.url:/fineract.json
springdoc.packagesToScan:org.apache.fineract
springdoc.pathsToMatch:/api/**
springdoc.use-management-port:false
springdoc.show-actuator:false

spring.web.resources.static-locations:classpath:/static/

spring.main.allow-bean-definition-overriding:true
spring.task.scheduling.pool.size:4
spring.batch.jdbc.initialize-schema:NEVER
# Disabling Spring Batch jobs on startup
spring.batch.job.enabled:false

resilience4j.retry.instances.executeCommand.max-attempts:3
resilience4j.retry.instances.executeCommand.wait-duration:1s
resilience4j.retry.instances.executeCommand.enable-exponential-backoff:true
resilience4j.retry.instances.executeCommand.exponential-backoff-multiplier:2
resilience4j.retry.instances.executeCommand.retryExceptions:org.springframework.dao.ConcurrencyFailureException,org.eclipse.persistence.exceptions.OptimisticLockException,jakarta.persistence.OptimisticLockException,org.springframework.orm.jpa.JpaOptimisticLockingFailureException,org.apache.fineract.infrastructure.core.exception.IdempotentCommandProcessUnderProcessingException

resilience4j.retry.instances.processJobDetailForExecution.max-attempts:${FINERACT_PROCESS_JOB_DETAIL_RETRY_MAX_ATTEMPTS:3}
resilience4j.retry.instances.processJobDetailForExecution.wait-duration:${FINERACT_PROCESS_JOB_DETAIL_RETRY_WAIT_DURATION:1s}
resilience4j.retry.instances.processJobDetailForExecution.enable-exponential-backoff:${FINERACT_PROCESS_JOB_DETAIL_RETRY_ENABLE_EXPONENTIAL_BACKOFF:true}
resilience4j.retry.instances.processJobDetailForExecution.exponential-backoff-multiplier:${FINERACT_PROCESS_JOB_DETAIL_RETRY_EXPONENTIAL_BACKOFF_MULTIPLIER:2}

resilience4j.retry.instances.recalculateInterest.max-attempts:${FINERACT_PROCESS_RECALCULATE_INTEREST_RETRY_MAX_ATTEMPTS:3}
resilience4j.retry.instances.recalculateInterest.wait-duration:${FINERACT_PROCESS_RECALCULATE_INTEREST_RETRY_WAIT_DURATION:1s}
resilience4j.retry.instances.recalculateInterest.enable-exponential-backoff:${FINERACT_PROCESS_RECALCULATE_INTEREST_RETRY_ENABLE_EXPONENTIAL_BACKOFF:true}
resilience4j.retry.instances.recalculateInterest.exponential-backoff-multiplier:${FINERACT_PROCESS_RECALCULATE_INTEREST_RETRY_EXPONENTIAL_BACKOFF_MULTIPLIER:2}
resilience4j.retry.instances.recalculateInterest.retryExceptions:${FINERACT_PROCESS_RECALCULATE_INTEREST_RETRY_EXCEPTIONS:org.springframework.dao.ConcurrencyFailureException,org.eclipse.persistence.exceptions.OptimisticLockException,jakarta.persistence.OptimisticLockException,org.springframework.orm.jpa.JpaOptimisticLockingFailureException}

resilience4j.retry.instances.postInterest.max-attempts:${FINERACT_PROCESS_POST_INTEREST_RETRY_MAX_ATTEMPTS:3}
resilience4j.retry.instances.postInterest.wait-duration:${FINERACT_PROCESS_POST_INTEREST_RETRY_WAIT_DURATION:1s}
resilience4j.retry.instances.postInterest.enable-exponential-backoff:${FINERACT_PROCESS_POST_INTEREST_RETRY_ENABLE_EXPONENTIAL_BACKOFF:true}
resilience4j.retry.instances.postInterest.exponential-backoff-multiplier:${FINERACT_PROCESS_POST_INTEREST_RETRY_EXPONENTIAL_BACKOFF_MULTIPLIER:2}
resilience4j.retry.instances.postInterest.retryExceptions:${FINERACT_PROCESS_POST_INTEREST_RETRY_EXCEPTIONS:org.springframework.dao.ConcurrencyFailureException,org.eclipse.persistence.exceptions.OptimisticLockException,jakarta.persistence.OptimisticLockException,org.springframework.orm.jpa.JpaOptimisticLockingFailureException}
